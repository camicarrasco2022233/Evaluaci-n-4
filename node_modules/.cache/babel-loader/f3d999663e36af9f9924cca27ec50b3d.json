{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\todolist2\\\\src\\\\components\\\\TodoItem.jsx\";\nimport React, { Fragment } from \"react\"; //item en la lista\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TodoItem(_ref) {\n  let {\n    todo,\n    eliminar\n  } = _ref;\n  const {\n    id,\n    task,\n    desc,\n    imp\n  } = todo;\n\n  const importante = () => {};\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: todo.imp,\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"botonX\",\n          onClick: () => eliminar(id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: todo.task\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: todo.desc\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n_c = TodoItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","Fragment","TodoItem","todo","eliminar","id","task","desc","imp","importante"],"sources":["C:/Users/Ale/todolist2/src/components/TodoItem.jsx"],"sourcesContent":["import React, { Fragment } from \"react\";\r\n//item en la lista\r\nexport function TodoItem({ todo, eliminar}) {\r\n  const { id, task, desc, imp} = todo;\r\n\r\n  const importante = () =>{}\r\n\r\n  return (\r\n    <Fragment>\r\n      <li className={todo.imp}>\r\n        <a href=\"#\">\r\n          <button type=\"button\" class=\"botonX\" onClick={() => eliminar(id)}>\r\n            X\r\n          </button>\r\n          <h2>{todo.task}</h2>\r\n          <p>{todo.desc}</p>\r\n        </a>\r\n      </li>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;;AACA,OAAO,SAASC,QAAT,OAAqC;EAAA,IAAnB;IAAEC,IAAF;IAAQC;EAAR,CAAmB;EAC1C,MAAM;IAAEC,EAAF;IAAMC,IAAN;IAAYC,IAAZ;IAAkBC;EAAlB,IAAyBL,IAA/B;;EAEA,MAAMM,UAAU,GAAG,MAAK,CAAE,CAA1B;;EAEA,oBACE,QAAC,QAAD;IAAA,uBACE;MAAI,SAAS,EAAEN,IAAI,CAACK,GAApB;MAAA,uBACE;QAAG,IAAI,EAAC,GAAR;QAAA,wBACE;UAAQ,IAAI,EAAC,QAAb;UAAsB,KAAK,EAAC,QAA5B;UAAqC,OAAO,EAAE,MAAMJ,QAAQ,CAACC,EAAD,CAA5D;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADF,eAIE;UAAA,UAAKF,IAAI,CAACG;QAAV;UAAA;UAAA;UAAA;QAAA,QAJF,eAKE;UAAA,UAAIH,IAAI,CAACI;QAAT;UAAA;UAAA;UAAA;QAAA,QALF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAaD;KAlBeL,Q"},"metadata":{},"sourceType":"module"}