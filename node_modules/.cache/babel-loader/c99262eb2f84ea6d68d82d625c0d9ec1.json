{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ale\\\\todolist2\\\\src\\\\components\\\\TodoList.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useRef } from \"react\";\nimport { useEffect } from \"react\";\nimport { v4 as uuid } from \"uuid\";\nimport { TodoItem } from \"./TodoItem\"; //funcion que maneja la lista\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst KEY = \"todolist-todos\";\nexport function TodoList() {\n  _s();\n\n  const [todos, setTodos] = useState([{\n    id: 1,\n    task: \"Tarea 1\",\n    completed: true\n  }, {\n    id: 2,\n    task: \"Tarea 2\",\n    completed: true\n  }, {\n    id: 3,\n    task: \"Tarea 3\",\n    completed: true\n  }, {\n    id: 4,\n    task: \"Tarea 4\",\n    completed: true\n  }, {\n    id: 5,\n    task: \"Tarea 5\",\n    completed: true\n  }, {\n    id: 6,\n    task: \"Tarea 6\",\n    completed: true\n  }, {\n    id: 7,\n    task: \"Tarea 7\",\n    completed: false\n  }]);\n  const taskRef = useRef();\n  const descRef = useRef();\n  /*   /* permite almacenar datos \r\n    useEffect(() => {\r\n      const storedTodos = JSON.parse(localStorage.getItem(KEY))\r\n      if((storedTodos)){\r\n        setTodos(storedTodos)\r\n      }\r\n    },[])\r\n  \r\n    useEffect(() => {\r\n      localStorage.setItem(KEY, JSON.stringify(todos))\r\n    },[todos]) */\n\n  const agregarTarea = () => {\n    //para ques se usa current.value?\n    const task = taskRef.current.value;\n    const desc = descRef.current.value;\n    console.log(task); //para que utiliza esto??\n\n    if (task === \"\") return;\n    console.log(\"Agregando tarea...\");\n    /* Metodo que esta definido por react para operar los elementos */\n\n    setTodos(prevTodos => {\n      const newTask = {\n        id: uuid(),\n        task: task,\n        desc: desc,\n        completed: false\n      };\n      return [...prevTodos, newTask];\n    }); //que hace esto?\n\n    taskRef.current.value = \"\";\n    descRef.current.value = \"\";\n  };\n\n  const eliminarNota = id => {\n    const newTodos = todos.filter(todo => todo.id !== id);\n    setTodos(newTodos);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Listado de Tareas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-group my-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: taskRef,\n        type: \"text\",\n        placeholder: \"Ingrese una tarea\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        ref: descRef,\n        type: \"text\",\n        placeholder: \"Descripcion\",\n        className: \"form-control\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        className: \"form-check-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: agregarTarea,\n        className: \"btn btn-success ms-1\",\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"\",\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo,\n        eliminar: eliminarNota\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoList, \"CFTysLTUDNFaFmwquuqEUfD0KY8=\");\n\n_c = TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","Fragment","useState","useRef","useEffect","v4","uuid","TodoItem","KEY","TodoList","todos","setTodos","id","task","completed","taskRef","descRef","agregarTarea","current","value","desc","console","log","prevTodos","newTask","eliminarNota","newTodos","filter","todo","map"],"sources":["C:/Users/Ale/todolist2/src/components/TodoList.jsx"],"sourcesContent":["import React, { Fragment, useState, useRef } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { v4 as uuid } from \"uuid\";\r\nimport { TodoItem } from \"./TodoItem\";\r\n//funcion que maneja la lista\r\nconst KEY = \"todolist-todos\";\r\n\r\nexport function TodoList() {\r\n  const [todos, setTodos] = useState([\r\n    { id: 1, task: \"Tarea 1\", completed: true },\r\n    { id: 2, task: \"Tarea 2\", completed: true },\r\n    { id: 3, task: \"Tarea 3\", completed: true },\r\n    { id: 4, task: \"Tarea 4\", completed: true },\r\n    { id: 5, task: \"Tarea 5\", completed: true },\r\n    { id: 6, task: \"Tarea 6\", completed: true },\r\n    { id: 7, task: \"Tarea 7\", completed: false },\r\n  ]);\r\n\r\n  const taskRef = useRef();\r\n  const descRef = useRef();\r\n\r\n/*   /* permite almacenar datos \r\n  useEffect(() => {\r\n    const storedTodos = JSON.parse(localStorage.getItem(KEY))\r\n    if((storedTodos)){\r\n      setTodos(storedTodos)\r\n    }\r\n  },[])\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(KEY, JSON.stringify(todos))\r\n  },[todos]) */\r\n\r\n  const agregarTarea = () => {\r\n    //para ques se usa current.value?\r\n    const task = taskRef.current.value;\r\n    const desc = descRef.current.value;\r\n    console.log(task);\r\n    //para que utiliza esto??\r\n    if (task === \"\") return;\r\n\r\n    console.log(\"Agregando tarea...\");\r\n\r\n    /* Metodo que esta definido por react para operar los elementos */\r\n\r\n    setTodos((prevTodos) => {\r\n      const newTask = {\r\n        id: uuid(),\r\n        task: task,\r\n        desc: desc,\r\n        completed: false\r\n      };\r\n\r\n      return [...prevTodos, newTask];\r\n    });\r\n    //que hace esto?\r\n    taskRef.current.value = \"\";\r\n    descRef.current.value = \"\";\r\n  };\r\n\r\n\r\n\r\n  const eliminarNota = (id) => {\r\n    const newTodos = todos.filter((todo) => todo.id !== id);\r\n    setTodos(newTodos);\r\n  }\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <h1>Listado de Tareas</h1>\r\n      <div className=\"input-group my-4\">\r\n        <input\r\n          ref={taskRef}\r\n          type=\"text\"\r\n          placeholder=\"Ingrese una tarea\"\r\n          className=\"form-control\"\r\n        />\r\n        <input \r\n          ref={descRef}\r\n          type=\"text\" \r\n          placeholder=\"Descripcion\"\r\n          className=\"form-control\"\r\n        />\r\n        <input \r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n         />\r\n        <button type=\"button\" onClick={agregarTarea} className=\"btn btn-success ms-1\">\r\n          +\r\n        </button>\r\n      </div>\r\n\r\n      <ul className=\"\">\r\n        {/* Investigar que más se puede hacer con el método map */}\r\n        {todos.map((todo) => (\r\n          <TodoItem todo={todo} \r\n          key={todo.id} \r\n          eliminar ={eliminarNota}\r\n          ></TodoItem>\r\n        ))}\r\n      </ul>\r\n    </Fragment>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}